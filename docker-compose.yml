version: '3.9'

services:

  redis:
    #  https://temofeev.ru/info/articles/bystryy-zapusk-redis-cherez-docker-compose/
    container_name: sb-redis
    image: redis:latest
    env_file:
      - ./.env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      #      - "6380:6379"
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./redis:/data
    #      - redis:/data/redis
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - dev

  postgres:
    container_name: sb-postgres
    image: postgres:14-alpine
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-0.0.0.0}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      #      PGDATA: /data/postgres
      PGDATA: "/var/lib/postgresql/data/postgres"
      PGTZ: "Europe/Moscow"
    #      TZ:Europe/Moscow
    env_file:
      - ./.env
    volumes:
      - ./postgres:/var/lib/postgresql/data
    #      - postgres:/data/postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped #  on-failure always
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
      - "-c"
      - "TimeZone=${TZ:-Europe/Moscow}"
      - "-c"
      - "log_statement=all"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - dev
      - postgres

  pgadmin:
    container_name: sb-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE:-False}
    volumes:
      - pgadmin:/var/lib/pgadmin
    #      - pgadmin:/data/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  postgres_exporter:
    container_name: sb-postgres-exporter
    image: prometheuscommunity/postgres-exporter:v0.10.1
    env_file:
      - ./.env
    environment:
      DATA_SOURCE_USER: ${POSTGRES_USER:-postgres}
      DATA_SOURCE_PASS: ${POSTGRES_PASSWORD:-postgres}
      DATA_SOURCE_URI: postgres:5432/bot?sslmode=disable
      PG_EXPORTER_EXTEND_QUERY_PATH: /etc/postgres_exporter/queries.yaml
    volumes:
      - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    networks:
      - postgres

  bot:
    container_name: sb-bot
    image: "bot"
    stop_signal: SIGINT
    build:
      context: .
      dockerfile: build_files/Dockerfile
    env_file:
      - ./.env
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - "80:80"
    networks:
      - dev

    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

volumes:
  postgres:
  pgadmin:
  redis:

networks:
  dev:
  postgres:
    driver: bridge