import logging

from aiogram import Router, F
from aiogram.filters import Command, and_f, StateFilter
from aiogram.types import Message
from aiogram.utils.chat_action import ChatActionSender
from aiogram.fsm.context import FSMContext

from filters.filters import AdminFilter, ChatTypeFilter
from hendlers.mailings.mailing import revenue_by_day, safe_boss

from structures.keybords import (
    boss_other_menu,
    cancel_menu, boss_report_menu
)

from fsm.mailings import Mailing

from core.bot import bot
from database import Database
from utils.utils import get_current_datetime
from core.config import settings, GoogleSheetsSettings

gs: GoogleSheetsSettings = settings.gs

router = Router(name=__name__)
router.message.filter(and_f(AdminFilter(), ChatTypeFilter(['private'])))

statesMailing = StateFilter(
    Mailing(),
)


@router.message(Command("cancel"), statesMailing)
@router.message(F.text.lower().in_({'–æ—Ç–º–µ–Ω–∞', '–æ—Ç–º–µ–Ω–∏—Ç—å', '‚ùå –æ—Ç–º–µ–Ω–∞', '‚¨Ü –≤—ã–π—Ç–∏', 'cancel'}), statesMailing)
async def cancel_other_handler(message: Message, state: FSMContext) -> None:
    await state.clear()
    answer_text, reply_markup = ('–ï—â–µ –≤–æ–ø—Ä–æ—Å—ã? üëá', boss_other_menu)
    await message.answer(answer_text, disable_web_page_preview=True, reply_markup=reply_markup)


@router.message(StateFilter(None), F.text.lower() == 'üì¢ —Ä–∞—Å—Å—ã–ª–∫–∞')
async def news_mailing_start(message: Message, state: FSMContext):
    """–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º"""
    await state.set_state(Mailing.TEXT)
    await message.reply('–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ üëá', reply_markup=cancel_menu)


@router.message(StateFilter(Mailing.TEXT), F.text | F.video | F.video_note)
async def news_mailing(message: Message, state: FSMContext, db: Database):
    """–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º"""
    users = await db.user.get_all()
    check = []
    text = message.text
    if text:
        msg = f'üì¢ <b>News {get_current_datetime().strftime("%d.%m.%y %H:%M")}</b>\n<em>{text}</em>'
        for user in users:
            try:
                if user.status and user.user_id not in check:
                    check.append(user.user_id)
                    await bot.send_message(user.user_id, msg)
            except Exception as ex:
                logging.warning("%s %s –æ—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏", user.user_id, user.full_name, exc_info=ex)
                continue
    elif message.video:
        for user in users:
            try:
                msg = f'üì¢ <b>News {get_current_datetime().strftime("%d.%m.%y %H:%M")}</b>\n' \
                      f'<em>–ø—Ä–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ üëá</em>'
                if user.status and user.user_id not in check:
                    check.append(user.user_id)
                    await bot.send_video(chat_id=user.user_id, video=message.video.file_id, caption=msg)
            except Exception as ex:
                logging.warning("%s %s –æ—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏", user.user_id, user.full_name, exc_info=ex)
                continue
    elif message.video_note:
        for user in users:
            try:
                msg = f'üì¢ <b>News {get_current_datetime().strftime("%d.%m.%y %H:%M")}</b>\n' \
                      f'<em>–ø—Ä–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ üëá</em>'
                if user.status and user.user_id not in check:
                    check.append(user.user_id)
                    await bot.send_message(user.user_id, msg)
                    await bot.send_video_note(
                        chat_id=user.user_id,
                        video_note=message.video_note.file_id,
                        duration=47,
                        length=360)
            except Exception as ex:
                logging.warning("%s %s –æ—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏", user.user_id, user.full_name, exc_info=ex)
                continue

    await message.answer('–†–∞—Å—Å—ã–ª–∫—É –ø—Ä–æ–≤–µ–ª–∏ üòé', reply_markup=boss_other_menu)
    await state.clear()


@router.message(F.text.lower() == 'üí∞ –≤—ã—Ä—É—á–∫–∞ –∑–∞ –≤—á–µ—Ä–∞')
async def send_yesterday_revenue(message: Message):
    """–í—ã—Ä—É—á–∫–∞ –∑–∞ –≤—á–µ—Ä–∞"""
    async with ChatActionSender.typing(chat_id=message.from_user.id, bot=bot):
        await revenue_by_day(message.from_user.id)


@router.message(F.text.lower() == 'üíµ –æ—Å—Ç–∞—Ç–∫–∏ —Å–µ–π—Ñ')
async def send_safe(message: Message):
    """–û—Å—Ç–∞—Ç–∫–∏ —Å–µ–π—Ñ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"""
    async with ChatActionSender.typing(chat_id=message.from_user.id, bot=bot):
        await safe_boss(message.from_user.id, reply_markup=boss_report_menu)
